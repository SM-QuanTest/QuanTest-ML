# -*- coding: utf-8 -*-
"""chap6_other_reversal_patterns.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IN4y48gDmwJFUrkOPZ6J4jCzUEA1FKkC

# 6장 그 외 반전
* 잉태형
* 상승집게형
* 하락집게형
* 샅바형
* 까마귀형
* 반격형
* 만두형 천장과 프라이팬형 바닥
* 탑형 천장과 탑형 바닥
"""

import pandas as pd

df=pd.read_csv('')

#잉태형

'''
팽이형(작은몸통)이 등장

작은 캔들의 몸통이 - 몸통이 비정상적으로 큰 음봉 또는 양봉 - 안으로 들어가 있음
몸통이 비정상적으로 큰 음봉/양봉 기준 : 20일간의 몸통 평균의 1.5배 이상으로 정의
잉태형의 두 번째 캔들은 음/양봉 상관없음

'''

#상승추세 이후의 잉태형(상승잉태형)
def is_harami_after_uptrend(df):
    uptrend = is_uptrend(df).shift(2).fillna(False)

    o = df['시가']
    h = df['고가']
    l = df['저가']
    c = df['종가']
    body = (o - c).abs()

    o1 = o.shift(1)
    c1 = c.shift(1)

    body_1 = body.shift(1)


    # 몸통이 비정상적으로 큰 음봉 또는 양봉
    avg_body = body_1.rolling(20).mean().shift(1)
    big_body = body_1 >= avg_body * 1.5

    # 우선 전 날이 비정상적으로 크고, 그 다음날이 해당 몸통의 30퍼센트 안으로 들어와야함,
    # 글고 종가와 시가가 앞 차트의 종가와 시가 안에 포함돼있어야함

    # 작은몸통
    small_body = body < (h - l) * 0.3

    # 작은몸통이 큰 몸통 안에 들어와있음
    big_body_max = pd.concat([o1, c1], axis=1).max(axis=1)
    big_body_min = pd.concat([o1, c1], axis=1).min(axis=1)
    small_body_max = pd.concat([o, c], axis=1).max(axis=1)
    small_body_min = pd.concat([o, c], axis=1).min(axis=1)

    small_in_big = (small_body_max <= big_body_max) & (small_body_min >= big_body_min)

    return (uptrend&big_body&small_body&small_in_big).fillna(False)



#하락추세 이후의 잉태형(하락잉태형)
def is_harami_after_downtrend(df):
    downtrend = is_downtrend(df).shift(2).fillna(False)

    o = df['시가']
    h = df['고가']
    l = df['저가']
    c = df['종가']
    body = (o - c).abs()

    o1 = o.shift(1)
    c1 = c.shift(1)

    body_1 = body.shift(1)


    # 몸통이 비정상적으로 큰 음봉 또는 양봉
    avg_body = body_1.rolling(20).mean().shift(1)
    big_body = body_1 >= avg_body * 1.5

    # 우선 전 날이 비정상적으로 크고, 그 다음날이 해당 몸통의 30퍼센트 안으로 들어와야함,
    # 글고 종가와 시가가 앞 차트의 종가와 시가 안에 포함돼있어야함

    # 작은몸통
    small_body = body < (h - l) * 0.3

    # 작은몸통이 큰 몸통 안에 들어와있음
    big_body_max = pd.concat([o1, c1], axis=1).max(axis=1)
    big_body_min = pd.concat([o1, c1], axis=1).min(axis=1)
    small_body_max = pd.concat([o, c], axis=1).max(axis=1)
    small_body_min = pd.concat([o, c], axis=1).min(axis=1)

    small_in_big = (small_body_max <= big_body_max) & (small_body_min >= big_body_min)

    return (downtrend&big_body&small_body&small_in_big).fillna(False)

#십자잉태형

'''
팽이형(작은몸통)이 등장

도지형 캔들의 몸통이 - 몸통이 비정상적으로 큰 음봉 또는 양봉 - 안으로 들어가 있음 (기존 정의한 도지형 사용)
몸통이 비정상적으로 큰 음봉/양봉 기준 : 20일간의 몸통 평균의 1.5배 이상으로 정의
잉태형의 두 번째 캔들은 음/양봉 상관없음

'''

#상승추세 이후의 십자잉태형(상승십자잉태형)
def is_harami_cross_after_uptrend(df):
    uptrend = is_uptrend(df).shift(2).fillna(False)

    o = df['시가']
    h = df['고가']
    l = df['저가']
    c = df['종가']
    body = (o - c).abs()

    o1 = o.shift(1)
    c1 = c.shift(1)
    h1 = h.shift(1)
    l1 = l.shift(1)
    body_1 = body.shift(1)


    # 몸통이 비정상적으로 큰 음봉 또는 양봉
    avg_body = body_1.rolling(20).mean().shift(1)
    big_body = body_1 >= avg_body * 1.5

    # 우선 전 날이 비정상적으로 크고, 그 다음날이 해당 몸통의 30퍼센트 안으로 들어와야함,
    # 글고 종가와 시가가 앞 차트의 종가와 시가 안에 포함돼있어야함

    # 작은몸통
    doji_body = body < (h - l) * 0.1

    # 작은몸통이 큰 몸통 안에 들어와있음
    big_body_max = pd.concat([o1, c1], axis=1).max(axis=1)
    big_body_min = pd.concat([o1, c1], axis=1).min(axis=1)
    doji_body_max = pd.concat([o, c], axis=1).max(axis=1)
    doji_body_min = pd.concat([o, c], axis=1).min(axis=1)

    doji_in_big = (doji_body_max <= big_body_max) & (doji_body_min >= big_body_min)

    return (uptrend&big_body&doji_body&doji_in_big).fillna(False)



#하락추세 이후의 십자잉태형(하락십자잉태형)
def is_harami_cross_after_downtrend(df):
    downtrend = is_downtrend(df).shift(2).fillna(False)

    o = df['시가']
    h = df['고가']
    l = df['저가']
    c = df['종가']
    body = (o - c).abs()

    o1 = o.shift(1)
    c1 = c.shift(1)
    h1 = h.shift(1)
    l1 = l.shift(1)
    body_1 = body.shift(1)


    # 몸통이 비정상적으로 큰 음봉 또는 양봉
    avg_body = body_1.rolling(20).mean().shift(1)
    big_body = body_1 >= avg_body * 1.5

    # 우선 전 날이 비정상적으로 크고, 그 다음날이 해당 몸통의 30퍼센트 안으로 들어와야함,
    # 글고 종가와 시가가 앞 차트의 종가와 시가 안에 포함돼있어야함

    # 작은몸통
    doji_body = body < (h - l) * 0.1

    # 작은몸통이 큰 몸통 안에 들어와있음
    big_body_max = pd.concat([o1, c1], axis=1).max(axis=1)
    big_body_min = pd.concat([o1, c1], axis=1).min(axis=1)
    doji_body_max = pd.concat([o, c], axis=1).max(axis=1)
    doji_body_min = pd.concat([o, c], axis=1).min(axis=1)

    doji_in_big = (doji_body_max <= big_body_max) & (doji_body_min >= big_body_min)

    return (downtrend&big_body&doji_body&doji_in_big).fillna(False)

#집게형

'''
집게형은 고가 또는 저가가 일치하는 두 개의 캔들로 이루어져있다.

하락집게형 - 상승장, 두 개 이상의 캔들이 연속적으로 고가가 일치하는 경우
상승집게형 - 하락장, 두 개 이상의 캔들이 연속적으로 저가가 일치하는 경우
-> 0.1% 이내의 오차범위일 때 동일하다고 정의

이상적인 경우 첫 번째 캔들은 크고 두 번째 캔들은 작아야 한다.
-> 두 번째 캔들이 첫 번째 캔들보다 50% 이상 작아야 탐지되도록 정의

'''

#하락집게형(상승장이후)
def is_tweezers_top(df):
    uptrend = is_uptrend(df).fillna(False)

    h = df['고가']
    h1 = h.shift(1)
    body = (df['시가'] - df['종가']).abs()
    body_1 = body.shift(1)

    same_high = (h - h1).abs() <= h * 0.001


    #두 번째 캔들이 첫 번째 캔들보다 작아야함
    small_body = body <= body_1 * 0.5

    return (uptrend&same_high&small_body).fillna(False)



#상승집게형(하락장이후)
def is_tweezers_bottom(df):
    downtrend = is_downtrend(df).fillna(False)

    l = df['저가']
    l1 = l.shift(1)
    body = (df['시가'] - df['종가']).abs()
    body_1 = body.shift(1)

    same_low = (l-l1).abs() <= l * 0.001


    #두 번째 캔들이 첫 번째 캔들보다 50% 작아야함
    small_body = body <= body_1 * 0.5

    return (downtrend&same_low&small_body).fillna(False)

#샅바형

'''
상승샅바형 - 시가와 저가가 매우 비슷, 종가와 고가가 똑같거나 비슷, 장대 양봉 - 종가가 시가보다 3% 이상 상승
하락샅바형 - 시가와 고가가 매우 비슷, 종가와 저가가 똑같거나 비슷, 장대 음봉 - 종가가 시가보다 3% 이상 하락하는 경우
'''

#상승샅바형(하락장이후)
def is_belt_hold_line_after_downtrend(df):
    downtrend = is_downtrend(df).fillna(False)

    o = df['시가']
    h = df['고가']
    l = df['저가']
    c = df['종가']
    body = (o - c).abs()

    same_open_low = (o - l).abs() <= l * 0.001
    same_close_high = (c - h).abs() <= h * 0.001

    long_bullish = ((c - o) / o) >= 0.03

    return (downtrend&same_open_low&same_close_high&long_bullish).fillna(False)



#하락샅바형(상승장이후)
def is_belt_hold_line_after_uptrend(df):
    uptrend = is_uptrend(df).fillna(False)

    o = df['시가']
    h = df['고가']
    l = df['저가']
    c = df['종가']
    body = (o - c).abs()

    same_open_high = (h - o).abs() <= o * 0.001
    same_close_low = (l - c).abs() <= c * 0.001

    long_bearish = ((o - c) / o) >= 0.03

    return (uptrend&same_open_high&same_close_low&long_bearish).fillna(False)

#까마귀형

'''
두 개의 음봉과 그 앞에 나타나는 캔들 사이에 상승갭 (앞에 나타나는 캔들은 보통 양봉)
두 번째 음봉의 시가가 첫 번째 음봉의 시가보다 위, 종가는 첫 번째 음봉의 종가보다 아래
'''

#까마귀형 (하락 반전신호)
def is_upside_gap_two_crows(df):
    uptrend = is_uptrend(df).shift(2).fillna(False)

    o = df['시가']
    h = df['고가']
    l = df['저가']
    c = df['종가']
    body = (o - c).abs()

    o1, o2 = o.shift(1), o.shift(2)
    c1, c2 = c.shift(1), c.shift(2)
    h1, h2 = h.shift(1), h.shift(2)
    l1, l2 = l.shift(1), l.shift(2)
    body_1, body_2 = body.shift(1), body.shift(2)


    first_bullish = c2 > o2
    second_bearish = c1 < o1
    third_bearish = c < o

    gap = (h2 < o1) & (h2 < o)
    cond = (o > o1) & (c < c1)

    return (uptrend&first_bullish&second_bearish&third_bearish&gap&cond).fillna(False)

#흑삼병

'''
연속적으로 하락하는 세 개의 음봉이 있는 경우
음봉은 종가가 저가와같거나 비슷(꼬리 종가 대비 10% 이내로 정의),
각 음봉의 시가는 앞 캔들의 몸통 안에 위치
'''

#흑삼병(하락 반전)
def is_three_black_crow(df):

    o = df['시가']
    h = df['고가']
    l = df['저가']
    c = df['종가']

    o1, o2 = o.shift(1), o.shift(2)
    c1, c2 = c.shift(1), c.shift(2)
    l1, l2 = l.shift(1), l.shift(2)

    all_bearish = (c2 < o2) & (c1 < o1) & (c < o)
    sim_close_low = ((l - c).abs() <= c * 0.1) & ((l1 - c1).abs() <= c * 0.1) & ((l2 - c2).abs() <= c * 0.1)
    open_in_last_bar = ((o > c1) & (o < o1)) & ((o1 > c2) & (o1 < o2))

    return (all_bearish&sim_close_low&open_in_last_bar).fillna(False)

#상승적삼병

'''
흑삼병과 반대
장대 양봉 세 개의 종가가 연속적으로 올라가는 패턴
각 양봉은 종가와 고가나 같거나 비슷 (0.03)
각 양봉의 시가는 앞 캔들 몸통의 내부나 가까이(종가/시가기준 2%)에 위치
'''

#상승적삼병
def is_three_advancing_white_soldier(df):

    o = df['시가']
    h = df['고가']
    c = df['종가']

    o1, o2 = o.shift(1), o.shift(2)
    c1, c2 = c.shift(1), c.shift(2)
    h1, h2 = h.shift(1), h.shift(2)

    all_bullish = (c2 > o2) & (c1 > o1) & (c > o)
    all_long = (((c2 - o2) / o2) >= 0.03) & (((c1 - o1) / o1) >= 0.03) & (((c - o) / o) >= 0.03)

    sim_close_high = ((h - c).abs() <= c * 0.1) & ((h1 - c1).abs() <= c1 * 0.1) & ((h2 - c2).abs() <= c2 * 0.1)
    open_in_last_bar = ((o < c1*1.02) & (o > o1*0.98)) & ((o1 < c2*1.02) & (o1 > o2*0.98))


    return (all_bullish&all_long&sim_close_high&open_in_last_bar).fillna(False)

#삼산형

'''
주가가 어떤 고가에서 세 차례 하락하거나 어떤 고가에 도달하기 위해 세 차례 시도할 경우 삼산형 천장
(기간의 범위 기준?)

'''

#삼산형
def is_three_mountain(df):



    return

#삼천형

'''
삼산형과 정반대 패턴
주가가 세 차례 바닥 수준을 시험할 때

'''

##삼천형
def is_three_river(df):



    return

#반격형

'''
상반되는 색깔의 캔들 두 개가 똑같은 종가 형성

상승반격형 - 하락추세에서 생김.
첫 번째 캔들은 장대음봉, 장대 음봉 - 종가가 시가보다 3% 이상 하락하는 경우
두 번째 캔들 양봉, 시가가 전보다 훨씬 낮아짐(2%), 몸통이 앞 캔들의 종가와 닿아있음(전날 body*0.1오차범위)

하락반격형 - 상승추세에서 생김
첫 번째 캔들은 장대양봉, 장대 양봉 - 종가가 시가보다 3% 이상 상승하는 경우
두 번째 캔들 음봉, 시가가 전보다 훨씬 높아짐(2%), 몸통이 앞 캔들의 종가와 닿아있음

'''

#상승반격형 (상승반전신호)
def is_counterattack_lines_after_downtrend(df):

  downtrend = is_downtrend(df).shift(1).fillna(False)

  o = df['시가']
  h = df['고가']
  l = df['저가']
  c = df['종가']
  body = (o - c).abs()

  o1 = o.shift(1)
  c1 = c.shift(1)
  h1 = h.shift(1)
  l1 = l.shift(1)
  body_1 = body.shift(1)

  long_bearish = ((o1 - c1) / o1) >= 0.03

  second_bullish = c > o
  gap_down = (o - c1) / c1 <= -0.02

  touch = (c - c1).abs() <= body_1 * 0.1


  return (downtrend&long_bearish&second_bullish&gap_down&touch).fillna(False)

#하락반격형 (상승반전신호)
def is_counterattack_lines_after_uptrend(df):

  uptrend = is_uptrend(df).shift(1).fillna(False)

  o = df['시가']
  h = df['고가']
  l = df['저가']
  c = df['종가']
  body = (o - c).abs()

  o1 = o.shift(1)
  c1 = c.shift(1)

  body_1 = body.shift(1)

  long_bullish = ((c1-o1) / o1) >= 0.03

  second_bullish = c < o
  gap_up = (o - c1) / c1 >= 0.02

  touch = (c - c1).abs() <= body_1 * 0.1


  return (uptrend&long_bullish&second_bullish&gap_up&touch).fillna(False)

#만두형천장, 프라이팬형바닥

'''
만두형천장
하락 반전신호.
주가가 볼록한 형태, 작은 캔들 몸통 이후 하락갭

볼록의 기준 : 총 5일을 기준으로 (시가/종가) max가 상승3, 하락2인 경우로 정의
 / 그 후 하락갭 양상



프라이팬형바닥
주가가 바닥을 치며 오목한 형태, 상승갭 형성

'''

#
def is_dumpling_tops(df):




  return
#
def is_frypan_bottom(df):



  return

#탑형 천장, 탑형 바닥

'''
탑형 천장
고가 영역에서 나타남
주가 상승 중에 하나 이상의 장대 양봉이 생긴 뒤, 소강상태(기준?), 이어 하나 이상의 장대 음봉 출현
-> 작은 캔들 몸통을 큰 캔들 모퉁이 양쪽에서 둘러싸고 있는 탑형 천장

탑형 바닥
하락 모멘텀을 유지하고 있는 약세장에서 하나 이상의 장대 음봉 발생, 작은 캔들 몸통이 하락세를 누그러뜨리고 장대 양봉 출현


'''

#
def is_tower_tops(df):




  return

#
def is_tower_bottom(df):



  return